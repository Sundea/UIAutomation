/* PrivateFrameworks/UIAutomation.framework
 *
 * Copyright Â© 2012, Apple Inc. All rights reserved.
 *
 ******************************************************************************/

#import <Foundation/NSObject.h>

@class NSDictionary, NSInvocation, UIAElementArray, UIAXElement;

@interface UIAElement : NSObject<NSCopying>
{
	UIAXElement *_uiaxElement;
	UIAElement *_parentElement;
	NSInvocation *_selfPatienceInvocation;
	double _createdTime;
	double _lastAccessedTime;
	BOOL _isValid;
	UIAElementArray *_elements;
	NSDictionary *_elementClassIndexSets;
}

+ (void)initialize;
+ (BOOL)_delayForTimeInterval:(double)arg1;
+ (void)_logVerbosity:(unsigned int)arg1 format:(id)arg2;
+ (int)_liveCount;
+ (int)_maxCount;
+ (id)_countsString;
+ (id)_elementWithUIAXElement:(id)arg1 parent:(id)arg2;
+ (id)attributeKeys;
+ (id)toOneRelationshipKeys;
+ (id)toManyRelationshipKeys;
+ (id)allKeys;
+ (struct CGAffineTransform)_transformToRotateFromInterfaceOrientation:(int)arg1;
+ (struct CGAffineTransform)_transformToRotateToInterfaceOrientation:(int)arg1;
+ (struct CGRect)_convertRectToCurrentInterfaceOrientation:(struct CGRect)arg1;
+ (struct CGRect)_convertRectFromCurrentInterfaceOrientation:(struct CGRect)arg1;
+ (struct CGPoint)_convertPointFromCurrentInterfaceOrientation:(struct CGPoint)arg1;
+ (struct CGPoint)_convertPointToCurrentInterfaceOrientation:(struct CGPoint)arg1;
+ (id)_nameForAXElement:(id)arg1;
+ (id)_valueForAXElement:(id)arg1;
+ (id)_hitPointFromDictionary:(id)arg1;
+ (id)_hitPointForObject:(id)arg1;
+ (id)_rectFromDictionary:(id)arg1;
+ (double)_patienceRetryInterval;
+ (void)_setPatienceRetryInterval:(double)arg1;
+ (double)patience;
+ (void)setPatience:(double)arg1;
+ (void)pushPatience:(double)arg1;
+ (double)popPatience;
+ (id)_invocationForInvoker:(id)arg1 selector:(SEL)arg2 arguments:(char *)arg3;
+ (id)_patienceInvocationPathForUIAObject:(id)arg1;
+ (id)_performInvocationPath:(id)arg1;
+ (id)_waitForInvocationPath:(id)arg1;
+ (id)_setPatienceInvocation:(id)arg1 forUIAObject:(id)arg2;
+ (id)_jsMethodNameForSelector:(SEL)arg1;
+ (id)_jsEscapedStringForString:(id)arg1;
+ (id)_jsStringForString:(id)arg1;
+ (id)_jsStringForDictionary:(id)arg1;
+ (id)_jsStringForObject:(id)arg1;
+ (id)_jsStringForRect:(struct CGRect)arg1;
+ (id)_jsStringForInvocation:(id)arg1;
+ (id)_jsMethodCallStringForInvoker:(id)arg1 selector:(SEL)arg2;
+ (id)_jsStringForInvocationPath:(id)arg1;
+ (id)_jsStringForUIAElement:(id)arg1;
+ (Class)_uiaClassForClass:(Class)arg1;
+ (Class)_classForSimpleUIAXElement:(id)arg1;
+ (id)elementForUIAXElement:(id)arg1;
+ (id)elementAtPosition:(struct CGPoint)arg1;
+ (id)_predicateForPredicateOrString:(id)arg1;
- (id)init;
- (id)_initWithUIAXElement:(id)arg1 parent:(id)arg2;
- (void)dealloc;
- (void)_emptyCaches;
- (void)_invalidate;
- (BOOL)isEqual:(id)arg1;
- (unsigned int)hash;
- (id)description;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (double)_createdTime;
- (double)_lastAccessedTime;
- (void)_setLastAccessedTime:(double)arg1;
- (BOOL)isValid;
- (BOOL)checkIsValid;
- (BOOL)waitForInvalid;
- (UIAElementArray *)attributeKeys;
- (UIAElementArray *)toOneRelationshipKeys;
- (UIAElementArray *)toManyRelationshipKeys;
- (UIAElementArray *)allKeys;
- (UIAElementArray *)_synonymToManyRelationshipKeys;
- (id)valueForUndefinedKey:(id)arg1;
- (UIAElementArray *)attributes;
- (UIAElementArray *)toOneRelationships;
- (UIAElementArray *)toManyRelationships;
- (id)uiaxElement;
- (id)parentElement;
- (id)ancestry;
- (id)_logInfo;
- (id)_logInfoWithChildren;
- (void)logElement;
- (void)logElementTree;
- (void)logAXInfo;
- (void)logAXTree;
- (id)pid;
- (id)hint;
- (id)label;
- (id)rect;
- (id)_uiaRect;
- (id)_tryHitpoint:(struct CGPoint)arg1;
- (id)_hitpoint;
- (id)hitpoint;
- (id)_uiaHitpoint;
- (id)isEnabled;
- (id)hasKeyboardFocus;
- (id)isVisible;
- (id)target;
- (id)name;
- (id)value;
- (BOOL)_shouldAllowSettingValue;
- (void)setValue:(id)arg1;
- (id)url;
- (id)dom;
- (id)className;
- (id)type;
- (void)undo;
- (void)redo;
- (void)_delayForAnimationsInProgress;
- (void)_prepareForAction:(SEL)arg1;
- (void)tap;
- (void)doubleTap;
- (void)twoFingerTap;
- (void)tapWithOptions:(id)arg1;
- (void)touchAndHold:(id)arg1;
- (void)_dragInsideWithOptions:(id)arg1 withFlick:(BOOL)arg2;
- (void)dragInsideWithOptions:(id)arg1;
- (void)flickInsideWithOptions:(id)arg1;
- (void)_rotateWithOptions:(id)arg1;
- (void)rotateWithOptions:(id)arg1;
- (void)activate;
- (void)scrollUp;
- (void)scrollDown;
- (void)scrollLeft;
- (void)scrollRight;
- (id)scrollToVisible;
- (id)scrollToElementWithName:(id)arg1;
- (id)scrollToElementWithPredicate:(id)arg1;
- (id)scrollToElementWithValue:(id)arg1 forKey:(id)arg2;
- (id)_selfPatienceInvocation;
- (void)_setSelfPatienceInvocation:(id)arg1;
- (void)chopPatience;
- (id)_objectWithPatienceInvocationFromUIAObject:(id)arg1 selector:(SEL)arg2;
- (id)_patienceForAttribute:(SEL)arg1 value:(id)arg2;
- (id)scriptingActionExpressionShouldFavorTapOffset;
- (id)scriptingInvocationString;
- (id)scriptingInvocationFullExpressionString;
- (id)_scriptingSynonymsForSubElement:(id)arg1 maxCount:(unsigned int)arg2;
- (id)scriptingFavoredSynonymString;
- (UIAElementArray *)scriptingSynonymStrings;
- (id)scriptingSynonymFullExpressionString;
- (id)_elementForSimpleUIAXElement:(id)arg1;
- (id)_elementsForUIAXElements:(id)arg1 axFilter:(SEL)arg2;
- (id)_elementsForUIAXElements:(id)arg1;
- (BOOL)_inspectConfirmElement:(id)arg1 forAXAncestry:(id)arg2 index:(unsigned int *)arg3;
- (id)_inspectedToOneRelationship:(id)arg1 forAXAncestry:(id)arg2 index:(unsigned int *)arg3;
- (id)_inspectedToManyRelationship:(id)arg1 forAXAncestry:(id)arg2 index:(unsigned int *)arg3;
- (id)_inspectedElementForAXAncestry:(id)arg1 index:(unsigned int *)arg2 triedKeys:(id)arg3;
- (id)_elementForUIAXElement:(id)arg1;
- (id)_elementAtPosition:(struct CGPoint)arg1;
- (id)elementAtPoint:(id)arg1;
- (id)withName:(id)arg1;
- (id)withValue:(id)arg1 forKey:(id)arg2;
- (id)withPredicate:(id)arg1;
- (UIAElementArray *)elements;
- (id)_elementsOfClass:(Class)arg1 forSelector:(SEL)arg2;
- (UIAElementArray *)actionSheets;
- (id)actionSheet;
- (UIAElementArray *)activityIndicators;
- (UIAElementArray *)buttons;
- (UIAElementArray *)editingMenus;
- (UIAElementArray *)images;
- (UIAElementArray *)keyboards;
- (id)keyboard;
- (UIAElementArray *)keys;
- (UIAElementArray *)links;
- (UIAElementArray *)navigationBars;
- (id)navigationBar;
- (UIAElementArray *)pageIndicators;
- (UIAElementArray *)pickers;
- (UIAElementArray *)popovers;
- (id)popover;
- (UIAElementArray *)progressIndicators;
- (UIAElementArray *)scrollViews;
- (UIAElementArray *)segmentedControls;
- (UIAElementArray *)sliders;
- (UIAElementArray *)switches;
- (UIAElementArray *)staticTexts;
- (UIAElementArray *)tableViews;
- (UIAElementArray *)textFields;
- (UIAElementArray *)secureTextFields;
- (UIAElementArray *)searchBars;
- (UIAElementArray *)tabBars;
- (id)tabBar;
- (UIAElementArray *)toolbars;
- (id)toolbar;
- (UIAElementArray *)textViews;
- (UIAElementArray *)webViews;

@end
